@model AcademicosUem.Models.Trabalho
@using Microsoft.AspNet.Identity


<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
</head>
<body>
    @using (Html.BeginForm("Create", "Trabalho", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
         @Html.AntiForgeryToken()

         <div class="form-horizontal">
             <hr />
             @Html.ValidationSummary(true, "", new { @class = "text-danger" })
             <div class="form-group">
                 @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "control-label col-md-2" })
                 <div class="col-md-10">
                     @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control" } })
                     @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
                 </div>
             </div>
                
             @Html.EditorFor(model => model.userId, new { htmlAttributes = new { @class = "form-control hidden", @Value = @User.Identity.GetUserId() } })

             <div class="form-group">
                 @Html.Label("Grau Academico", htmlAttributes: new { @class = "control-label col-md-2" })
                 <div class="col-md-10">

                     @{
                         var listaGrauAcademico = new List<SelectListItem>();
                         listaGrauAcademico.Add(new SelectListItem
                         {
                             Text = "Licenciatura",
                             Value = "Licenciatura"
                         });

                         listaGrauAcademico.Add(new SelectListItem
                         {
                             Text = "Mestrado",
                             Value  = "Mestrado"
                         });
                     }  

                     @Html.DropDownListFor(model => model.Grau_Academico, listaGrauAcademico, htmlAttributes: new { @class = "form-control" })
                     @Html.ValidationMessageFor(model => model.Grau_Academico, "", new { @class = "text-danger" })
                 </div>
             </div>

             <div class="form-group">
                 @Html.Label("Area", htmlAttributes: new { @class = "control-label col-md-2" })
                 <div class="col-md-10">
                     @Html.DropDownList("AreaID", null, htmlAttributes: new { @class = "form-control" })
                     @Html.ValidationMessageFor(model => model.AreaID, "", new { @class = "text-danger" })
                 </div>
             </div>

             <div class="form-group">
               

                 @Html.Label("Autor(es)", htmlAttributes: new { @class = "control-label col-md-2" })

                 <div class="col-md-10">
                     <input id="search" type="search" placeholder="Pesquisar autores" />
                 </div>

                 <div class="col-md-offset-2 col-md-10" style="max-height: 80px; overflow-y:auto;">
                  @{
                      List<AcademicosUem.ViewModels.AssignedAutorData> autores = ViewBag.Autores;
                      var listaAutores = new List<SelectListItem>();
                    @:<ul class="live-search-list">
                        foreach (var autor in autores)

                      {
                        <li>
                            <input type="checkbox" name="selectedAutores" id="@autor.AutorID" value="@autor.AutorID" @(Html.Raw(autor.Assigned ? "checked=\"checked\"" : "")) />
                            <label for="@autor.AutorID">@autor.Nome </label>
                            <br />
                        </li>
                      }

                    @:</ul>
                }
                     </div>
                 </div>

                 <div class="form-group">
                     @Html.Label("Documento", htmlAttributes: new { @class = "control-label col-md-2" })
                     <div class="col-md-10">
                         @{
                             <div class="file-field input-field">
                                 <div class="btn">
                                     <span>Browse</span>
                                     <input type="file" name="ficheiro" id="ficheiro">
                                 </div>
                                 <div class="file-path-wrapper">
                                     <input class="file-path validate" type="text" placeholder="Upload file">
                                 </div>
                             </div>
                         }
                     </div>
                 </div>


                 <div class="form-group">
                     @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
                     <div class="col-md-12" style="height: 70px;">
                         @Html.TextAreaFor(model => model.Descricao, new { rows= 12 })
                         @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
                     </div>
                 </div>



                 <div class="form-group">
                     <div class="col-md-offset-2 col-md-10">
                         <input type="submit" value="Publicar" class="btn green" />
                         <input type="button" data-toggle="collapse"  data-target="#registroTrabalho" value="Voltar" class="btn bt-voltar-home" />

                     </div>
                 </div>
             </div>
                             }

</body>
</html>
