@model AcademicosUem.Models.Trabalho

@{
    ViewBag.Title = "Create";
}


<div class="card white darken-1">
    <div class="card-content">
        @using (Html.BeginForm("Create", "Trabalhoes", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                <span class="card-title">Upload de documentos</span>
                <hr/>

                <div class="form-group">
                    @Html.Label("Tipo de Documento", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("CatFilesID", null, htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>
                

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
                    </div>
                </div>
@if (Roles.IsUserInRole("RA"))
{
                <div class="form-group">
                    @Html.LabelFor(model => model.Grau_Academico, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Grau_Academico, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Grau_Academico, "", new { @class = "text-danger" })
                    </div>
                </div>
}
@if (Roles.IsUserInRole("RA"))
                {
                <div class="form-group">
                    @Html.LabelFor(model => model.ApplicationUserID, "Estudante", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("ApplicationUserID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ApplicationUserID, "", new { @class = "text-danger" })
                    </div>
                </div>
}
                <div class="form-group">
                    @Html.Label("Supervisor", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("DocentesID", null, htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>

                @*<div class="form-group">
                        @Html.LabelFor(model => model.Data, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Data, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Data, "", new { @class = "text-danger" })
                        </div>
                    </div>*@
                <div class="form-group">
                    <label>Anexar Protocolo</label>
                    <div class="file-field input-field" col-md-10>
                        <div class="btn teal lighten-1">
                            <span>File</span>
                            <input type="file" name="ficheiro" id="ficheiro">
                        </div>
                        <div class="file-path-wrapper">
                            <input class="file-path validate" type="text">
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
</div>
    </div>
        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
